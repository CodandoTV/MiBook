// Mocks generated by Mockito 5.4.6 from annotations
// in mibook/test/search_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mibook/layers/data/api/api_client.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIApiClient extends _i1.Mock implements _i2.IApiClient {
  @override
  _i3.Future<Map<String, dynamic>> get({
    required String? endpoint,
    Map<String, dynamic>? queryParameters = const {},
    Map<String, dynamic>? options = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(#get, [], {
              #endpoint: endpoint,
              #queryParameters: queryParameters,
              #options: options,
            }),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> post({
    required String? endpoint,
    Map<String, dynamic>? body = const {},
    Map<String, dynamic>? options = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(#post, [], {
              #endpoint: endpoint,
              #body: body,
              #options: options,
            }),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> put({
    required String? endpoint,
    Map<String, dynamic>? body = const {},
    Map<String, dynamic>? options = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(#put, [], {
              #endpoint: endpoint,
              #body: body,
              #options: options,
            }),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> delete({required dynamic endpoint}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#endpoint: endpoint}),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> patch({
    required String? endpoint,
    Map<String, dynamic>? body = const {},
    Map<String, dynamic>? options = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(#patch, [], {
              #endpoint: endpoint,
              #body: body,
              #options: options,
            }),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);
}
